// Generated from CommandX.g4 by ANTLR 4.4
package br.edu.unifg.CommandX;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CommandXLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		INT=1, FLOAT=2, CHAR=3, BOOLEAN=4, STRING=5, POINTER_INT=6, POINTER_FLOAT=7, 
		POINTER_CHAR=8, POINTER_BOOLEAN=9, POINTER_STRING=10, POINTER_VAR=11, 
		PROGRAM=12, VAR=13, READ=14, PRINT=15, FUNC=16, PROC=17, VOID=18, RETURN=19, 
		IF=20, ELSE=21, ELIF=22, FOR=23, WHILE=24, ADDITIVE_OPERATOR=25, MULTIPLICATIVE_OPERATOR=26, 
		MOD=27, INCREMENT_OPERATOR=28, AND=29, OR=30, NOT=31, RELATIONAL_OPERATOR=32, 
		EQUALITY_OPERATOR=33, ASSIGN=34, PAR_OPEN=35, PAR_CLOSE=36, BRACES_OPEN=37, 
		BRACES_CLOSE=38, BRACKET_OPEN=39, BRACKET_CLOSE=40, SEMICOL=41, COMMA=42, 
		INTEGER_LITERAL=43, BOOLEAN_LITERAL=44, CHAR_LITERAL=45, STRING_LITERAL=46, 
		FLOAT_LITERAL=47, ARRAY=48, ID=49, LINE_COMMENT=50, BLOCK_COMMENT=51, 
		WS=52;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'"
	};
	public static final String[] ruleNames = {
		"INT", "FLOAT", "CHAR", "BOOLEAN", "STRING", "POINTER_INT", "POINTER_FLOAT", 
		"POINTER_CHAR", "POINTER_BOOLEAN", "POINTER_STRING", "POINTER_VAR", "PROGRAM", 
		"VAR", "READ", "PRINT", "FUNC", "PROC", "VOID", "RETURN", "IF", "ELSE", 
		"ELIF", "FOR", "WHILE", "ADDITIVE_OPERATOR", "MULTIPLICATIVE_OPERATOR", 
		"MOD", "INCREMENT_OPERATOR", "AND", "OR", "NOT", "RELATIONAL_OPERATOR", 
		"EQUALITY_OPERATOR", "ASSIGN", "PAR_OPEN", "PAR_CLOSE", "BRACES_OPEN", 
		"BRACES_CLOSE", "BRACKET_OPEN", "BRACKET_CLOSE", "SEMICOL", "COMMA", "INTEGER_LITERAL", 
		"BOOLEAN_LITERAL", "CHAR_LITERAL", "STRING_LITERAL", "FLOAT_LITERAL", 
		"ARRAY", "ID", "LINE_COMMENT", "BLOCK_COMMENT", "WS"
	};


	public CommandXLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CommandX.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\66\u0188\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3"+
		"\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7"+
		"\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3"+
		"\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13"+
		"\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3"+
		"\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3"+
		"\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3"+
		"\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3"+
		"\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3"+
		"\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\35\3\35\5\35\u0100"+
		"\n\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3!\3!\3!\3!\3!\5!\u010f\n!\3"+
		"\"\3\"\3\"\3\"\5\"\u0115\n\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)"+
		"\3)\3*\3*\3+\3+\3,\5,\u012a\n,\3,\6,\u012d\n,\r,\16,\u012e\3-\3-\3-\3"+
		"-\3-\3-\3-\3-\3-\5-\u013a\n-\3.\3.\3.\3.\3/\3/\7/\u0142\n/\f/\16/\u0145"+
		"\13/\3/\3/\3\60\5\60\u014a\n\60\3\60\6\60\u014d\n\60\r\60\16\60\u014e"+
		"\3\60\3\60\6\60\u0153\n\60\r\60\16\60\u0154\3\61\3\61\3\61\3\61\3\61\3"+
		"\61\3\62\3\62\7\62\u015f\n\62\f\62\16\62\u0162\13\62\3\63\3\63\3\63\3"+
		"\63\7\63\u0168\n\63\f\63\16\63\u016b\13\63\3\63\5\63\u016e\n\63\3\63\3"+
		"\63\3\63\3\63\3\64\3\64\3\64\3\64\7\64\u0178\n\64\f\64\16\64\u017b\13"+
		"\64\3\64\3\64\3\64\3\64\3\64\3\65\6\65\u0183\n\65\r\65\16\65\u0184\3\65"+
		"\3\65\3\u0179\2\66\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r"+
		"\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63"+
		"e\64g\65i\66\3\2\f\4\2--//\4\2,,\61\61\4\2>>@@\3\2\62;\6\2\f\f\17\17$"+
		"$))\5\2\f\f\17\17$$\5\2C\\aac|\6\2\62;C\\aac|\4\2\f\f\17\17\5\2\13\f\17"+
		"\17\"\"\u0197\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2"+
		"\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2"+
		"\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2"+
		"\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2"+
		"\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3"+
		"\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2"+
		"\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2"+
		"S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3"+
		"\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\3k\3\2\2"+
		"\2\5o\3\2\2\2\7u\3\2\2\2\tz\3\2\2\2\13\u0082\3\2\2\2\r\u0089\3\2\2\2\17"+
		"\u008e\3\2\2\2\21\u0095\3\2\2\2\23\u009b\3\2\2\2\25\u00a4\3\2\2\2\27\u00ac"+
		"\3\2\2\2\31\u00b1\3\2\2\2\33\u00b9\3\2\2\2\35\u00bd\3\2\2\2\37\u00c2\3"+
		"\2\2\2!\u00c8\3\2\2\2#\u00cd\3\2\2\2%\u00d2\3\2\2\2\'\u00d7\3\2\2\2)\u00de"+
		"\3\2\2\2+\u00e1\3\2\2\2-\u00e6\3\2\2\2/\u00eb\3\2\2\2\61\u00ef\3\2\2\2"+
		"\63\u00f5\3\2\2\2\65\u00f7\3\2\2\2\67\u00f9\3\2\2\29\u00ff\3\2\2\2;\u0101"+
		"\3\2\2\2=\u0104\3\2\2\2?\u0107\3\2\2\2A\u010e\3\2\2\2C\u0114\3\2\2\2E"+
		"\u0116\3\2\2\2G\u0118\3\2\2\2I\u011a\3\2\2\2K\u011c\3\2\2\2M\u011e\3\2"+
		"\2\2O\u0120\3\2\2\2Q\u0122\3\2\2\2S\u0124\3\2\2\2U\u0126\3\2\2\2W\u0129"+
		"\3\2\2\2Y\u0139\3\2\2\2[\u013b\3\2\2\2]\u013f\3\2\2\2_\u0149\3\2\2\2a"+
		"\u0156\3\2\2\2c\u015c\3\2\2\2e\u0163\3\2\2\2g\u0173\3\2\2\2i\u0182\3\2"+
		"\2\2kl\7k\2\2lm\7p\2\2mn\7v\2\2n\4\3\2\2\2op\7h\2\2pq\7n\2\2qr\7q\2\2"+
		"rs\7c\2\2st\7v\2\2t\6\3\2\2\2uv\7e\2\2vw\7j\2\2wx\7c\2\2xy\7t\2\2y\b\3"+
		"\2\2\2z{\7d\2\2{|\7q\2\2|}\7q\2\2}~\7n\2\2~\177\7g\2\2\177\u0080\7c\2"+
		"\2\u0080\u0081\7p\2\2\u0081\n\3\2\2\2\u0082\u0083\7u\2\2\u0083\u0084\7"+
		"v\2\2\u0084\u0085\7t\2\2\u0085\u0086\7k\2\2\u0086\u0087\7p\2\2\u0087\u0088"+
		"\7i\2\2\u0088\f\3\2\2\2\u0089\u008a\7k\2\2\u008a\u008b\7p\2\2\u008b\u008c"+
		"\7v\2\2\u008c\u008d\7,\2\2\u008d\16\3\2\2\2\u008e\u008f\7h\2\2\u008f\u0090"+
		"\7n\2\2\u0090\u0091\7q\2\2\u0091\u0092\7c\2\2\u0092\u0093\7v\2\2\u0093"+
		"\u0094\7,\2\2\u0094\20\3\2\2\2\u0095\u0096\7e\2\2\u0096\u0097\7j\2\2\u0097"+
		"\u0098\7c\2\2\u0098\u0099\7t\2\2\u0099\u009a\7,\2\2\u009a\22\3\2\2\2\u009b"+
		"\u009c\7d\2\2\u009c\u009d\7q\2\2\u009d\u009e\7q\2\2\u009e\u009f\7n\2\2"+
		"\u009f\u00a0\7g\2\2\u00a0\u00a1\7c\2\2\u00a1\u00a2\7p\2\2\u00a2\u00a3"+
		"\7,\2\2\u00a3\24\3\2\2\2\u00a4\u00a5\7u\2\2\u00a5\u00a6\7v\2\2\u00a6\u00a7"+
		"\7t\2\2\u00a7\u00a8\7k\2\2\u00a8\u00a9\7p\2\2\u00a9\u00aa\7i\2\2\u00aa"+
		"\u00ab\7,\2\2\u00ab\26\3\2\2\2\u00ac\u00ad\7x\2\2\u00ad\u00ae\7c\2\2\u00ae"+
		"\u00af\7t\2\2\u00af\u00b0\7,\2\2\u00b0\30\3\2\2\2\u00b1\u00b2\7r\2\2\u00b2"+
		"\u00b3\7t\2\2\u00b3\u00b4\7q\2\2\u00b4\u00b5\7i\2\2\u00b5\u00b6\7t\2\2"+
		"\u00b6\u00b7\7c\2\2\u00b7\u00b8\7o\2\2\u00b8\32\3\2\2\2\u00b9\u00ba\7"+
		"x\2\2\u00ba\u00bb\7c\2\2\u00bb\u00bc\7t\2\2\u00bc\34\3\2\2\2\u00bd\u00be"+
		"\7t\2\2\u00be\u00bf\7g\2\2\u00bf\u00c0\7c\2\2\u00c0\u00c1\7f\2\2\u00c1"+
		"\36\3\2\2\2\u00c2\u00c3\7r\2\2\u00c3\u00c4\7t\2\2\u00c4\u00c5\7k\2\2\u00c5"+
		"\u00c6\7p\2\2\u00c6\u00c7\7v\2\2\u00c7 \3\2\2\2\u00c8\u00c9\7h\2\2\u00c9"+
		"\u00ca\7w\2\2\u00ca\u00cb\7p\2\2\u00cb\u00cc\7e\2\2\u00cc\"\3\2\2\2\u00cd"+
		"\u00ce\7r\2\2\u00ce\u00cf\7t\2\2\u00cf\u00d0\7q\2\2\u00d0\u00d1\7e\2\2"+
		"\u00d1$\3\2\2\2\u00d2\u00d3\7x\2\2\u00d3\u00d4\7q\2\2\u00d4\u00d5\7k\2"+
		"\2\u00d5\u00d6\7f\2\2\u00d6&\3\2\2\2\u00d7\u00d8\7t\2\2\u00d8\u00d9\7"+
		"g\2\2\u00d9\u00da\7v\2\2\u00da\u00db\7w\2\2\u00db\u00dc\7t\2\2\u00dc\u00dd"+
		"\7p\2\2\u00dd(\3\2\2\2\u00de\u00df\7k\2\2\u00df\u00e0\7h\2\2\u00e0*\3"+
		"\2\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7n\2\2\u00e3\u00e4\7u\2\2\u00e4"+
		"\u00e5\7g\2\2\u00e5,\3\2\2\2\u00e6\u00e7\7g\2\2\u00e7\u00e8\7n\2\2\u00e8"+
		"\u00e9\7k\2\2\u00e9\u00ea\7h\2\2\u00ea.\3\2\2\2\u00eb\u00ec\7h\2\2\u00ec"+
		"\u00ed\7q\2\2\u00ed\u00ee\7t\2\2\u00ee\60\3\2\2\2\u00ef\u00f0\7y\2\2\u00f0"+
		"\u00f1\7j\2\2\u00f1\u00f2\7k\2\2\u00f2\u00f3\7n\2\2\u00f3\u00f4\7g\2\2"+
		"\u00f4\62\3\2\2\2\u00f5\u00f6\t\2\2\2\u00f6\64\3\2\2\2\u00f7\u00f8\t\3"+
		"\2\2\u00f8\66\3\2\2\2\u00f9\u00fa\7\'\2\2\u00fa8\3\2\2\2\u00fb\u00fc\7"+
		"-\2\2\u00fc\u0100\7-\2\2\u00fd\u00fe\7/\2\2\u00fe\u0100\7/\2\2\u00ff\u00fb"+
		"\3\2\2\2\u00ff\u00fd\3\2\2\2\u0100:\3\2\2\2\u0101\u0102\7(\2\2\u0102\u0103"+
		"\7(\2\2\u0103<\3\2\2\2\u0104\u0105\7~\2\2\u0105\u0106\7~\2\2\u0106>\3"+
		"\2\2\2\u0107\u0108\7#\2\2\u0108@\3\2\2\2\u0109\u010f\t\4\2\2\u010a\u010b"+
		"\7@\2\2\u010b\u010f\7?\2\2\u010c\u010d\7>\2\2\u010d\u010f\7?\2\2\u010e"+
		"\u0109\3\2\2\2\u010e\u010a\3\2\2\2\u010e\u010c\3\2\2\2\u010fB\3\2\2\2"+
		"\u0110\u0111\7?\2\2\u0111\u0115\7?\2\2\u0112\u0113\7#\2\2\u0113\u0115"+
		"\7?\2\2\u0114\u0110\3\2\2\2\u0114\u0112\3\2\2\2\u0115D\3\2\2\2\u0116\u0117"+
		"\7?\2\2\u0117F\3\2\2\2\u0118\u0119\7*\2\2\u0119H\3\2\2\2\u011a\u011b\7"+
		"+\2\2\u011bJ\3\2\2\2\u011c\u011d\7}\2\2\u011dL\3\2\2\2\u011e\u011f\7\177"+
		"\2\2\u011fN\3\2\2\2\u0120\u0121\7]\2\2\u0121P\3\2\2\2\u0122\u0123\7_\2"+
		"\2\u0123R\3\2\2\2\u0124\u0125\7=\2\2\u0125T\3\2\2\2\u0126\u0127\7.\2\2"+
		"\u0127V\3\2\2\2\u0128\u012a\7/\2\2\u0129\u0128\3\2\2\2\u0129\u012a\3\2"+
		"\2\2\u012a\u012c\3\2\2\2\u012b\u012d\t\5\2\2\u012c\u012b\3\2\2\2\u012d"+
		"\u012e\3\2\2\2\u012e\u012c\3\2\2\2\u012e\u012f\3\2\2\2\u012fX\3\2\2\2"+
		"\u0130\u0131\7v\2\2\u0131\u0132\7t\2\2\u0132\u0133\7w\2\2\u0133\u013a"+
		"\7g\2\2\u0134\u0135\7h\2\2\u0135\u0136\7c\2\2\u0136\u0137\7n\2\2\u0137"+
		"\u0138\7u\2\2\u0138\u013a\7g\2\2\u0139\u0130\3\2\2\2\u0139\u0134\3\2\2"+
		"\2\u013aZ\3\2\2\2\u013b\u013c\7)\2\2\u013c\u013d\n\6\2\2\u013d\u013e\7"+
		")\2\2\u013e\\\3\2\2\2\u013f\u0143\7$\2\2\u0140\u0142\n\7\2\2\u0141\u0140"+
		"\3\2\2\2\u0142\u0145\3\2\2\2\u0143\u0141\3\2\2\2\u0143\u0144\3\2\2\2\u0144"+
		"\u0146\3\2\2\2\u0145\u0143\3\2\2\2\u0146\u0147\7$\2\2\u0147^\3\2\2\2\u0148"+
		"\u014a\7/\2\2\u0149\u0148\3\2\2\2\u0149\u014a\3\2\2\2\u014a\u014c\3\2"+
		"\2\2\u014b\u014d\t\5\2\2\u014c\u014b\3\2\2\2\u014d\u014e\3\2\2\2\u014e"+
		"\u014c\3\2\2\2\u014e\u014f\3\2\2\2\u014f\u0150\3\2\2\2\u0150\u0152\7\60"+
		"\2\2\u0151\u0153\t\5\2\2\u0152\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154"+
		"\u0152\3\2\2\2\u0154\u0155\3\2\2\2\u0155`\3\2\2\2\u0156\u0157\7c\2\2\u0157"+
		"\u0158\7t\2\2\u0158\u0159\7t\2\2\u0159\u015a\7c\2\2\u015a\u015b\7{\2\2"+
		"\u015bb\3\2\2\2\u015c\u0160\t\b\2\2\u015d\u015f\t\t\2\2\u015e\u015d\3"+
		"\2\2\2\u015f\u0162\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161"+
		"d\3\2\2\2\u0162\u0160\3\2\2\2\u0163\u0164\7\61\2\2\u0164\u0165\7\61\2"+
		"\2\u0165\u0169\3\2\2\2\u0166\u0168\n\n\2\2\u0167\u0166\3\2\2\2\u0168\u016b"+
		"\3\2\2\2\u0169\u0167\3\2\2\2\u0169\u016a\3\2\2\2\u016a\u016d\3\2\2\2\u016b"+
		"\u0169\3\2\2\2\u016c\u016e\7\17\2\2\u016d\u016c\3\2\2\2\u016d\u016e\3"+
		"\2\2\2\u016e\u016f\3\2\2\2\u016f\u0170\7\f\2\2\u0170\u0171\3\2\2\2\u0171"+
		"\u0172\b\63\2\2\u0172f\3\2\2\2\u0173\u0174\7\61\2\2\u0174\u0175\7,\2\2"+
		"\u0175\u0179\3\2\2\2\u0176\u0178\13\2\2\2\u0177\u0176\3\2\2\2\u0178\u017b"+
		"\3\2\2\2\u0179\u017a\3\2\2\2\u0179\u0177\3\2\2\2\u017a\u017c\3\2\2\2\u017b"+
		"\u0179\3\2\2\2\u017c\u017d\7,\2\2\u017d\u017e\7\61\2\2\u017e\u017f\3\2"+
		"\2\2\u017f\u0180\b\64\2\2\u0180h\3\2\2\2\u0181\u0183\t\13\2\2\u0182\u0181"+
		"\3\2\2\2\u0183\u0184\3\2\2\2\u0184\u0182\3\2\2\2\u0184\u0185\3\2\2\2\u0185"+
		"\u0186\3\2\2\2\u0186\u0187\b\65\2\2\u0187j\3\2\2\2\22\2\u00ff\u010e\u0114"+
		"\u0129\u012e\u0139\u0143\u0149\u014e\u0154\u0160\u0169\u016d\u0179\u0184"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}